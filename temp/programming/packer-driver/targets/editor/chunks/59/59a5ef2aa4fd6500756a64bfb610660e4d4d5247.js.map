{"version":3,"sources":["file:///E:/04Project/Cocos/FlappyBird2/assets/script/BirdCtrl.ts"],"names":["_decorator","Component","Node","RigidBody","v3","input","Input","PhysicsSystem","SphereCollider","EnumGameStatus","GameManager","GameData","ccclass","property","BirdCtrl","RigidBodyComPonent","onLoad","Bird","getComponent","init","start","update","checkPos","changeDamping","calculateAngel","setPosition","data","birdPos","setScale","birdScale","on","EventType","MOUSE_DOWN","onMouseClick","instance","gravity","birdGravity","linearDamping","coms","getComponents","onHit","getScore","event","setLinearVelocity","birdJumpStrength","console","log","gameStatus","die","score","brickPoint","speed","getLinearVelocity","y","birdSpeedUpDamping","birdSpeedDownDamping","position","x","brickSpeed","v","z","Math","atan"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,E,OAAAA,E;AAAIC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAmBC,MAAAA,a,OAAAA,a;AAAgCC,MAAAA,c,OAAAA,c;;AACtGC,MAAAA,c,iBAAAA,c;AAAgBC,MAAAA,W,iBAAAA,W;;AAChBC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBb,U;;0BAGjBc,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ,CAACX,IAAD,C,2BAHb,MACaY,QADb,SAC8Bb,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA,eAK5Bc,kBAL4B,GAKG,IALH;AAAA;;AAMxC;AACIC,QAAAA,MAAM,GAAE;AACJ,eAAKD,kBAAL,GAA0B,KAAKE,IAAL,CAAUC,YAAV,CAAuBf,SAAvB,CAA1B;AACA,eAAKgB,IAAL;AACH;;AACDC,QAAAA,KAAK,GAAE,CAEN;;AACDC,QAAAA,MAAM,GAAE;AACJ,eAAKC,QAAL;AACA,eAAKC,aAAL;AACA,eAAKC,cAAL;AACH,SAlBmC,CAmBxC;;;AACIL,QAAAA,IAAI,GAAE;AACF,eAAKF,IAAL,CAAUQ,WAAV,CAAsBrB,EAAE,CAAC,GAAD,EAAK;AAAA;AAAA,oCAASsB,IAAT,CAAcC,OAAnB,EAA2B,CAA3B,CAAxB,EADE,CACoD;;AACtD,eAAKV,IAAL,CAAUW,QAAV,CAAmBxB,EAAE,CAAC;AAAA;AAAA,oCAASsB,IAAT,CAAcG,SAAf,EAAyB;AAAA;AAAA,oCAASH,IAAT,CAAcG,SAAvC,EAAiD;AAAA;AAAA,oCAASH,IAAT,CAAcG,SAA/D,CAArB,EAFE,CAE6F;;AAC/FxB,UAAAA,KAAK,CAACyB,EAAN,CAASxB,KAAK,CAACyB,SAAN,CAAgBC,UAAzB,EAAoC,KAAKC,YAAzC,EAAsD,IAAtD,EAHE,CAG0D;;AAC5D1B,UAAAA,aAAa,CAAC2B,QAAd,CAAuBC,OAAvB,GAA+B/B,EAAE,CAAC,CAAD,EAAG,CAAC;AAAA;AAAA,oCAASsB,IAAT,CAAcU,WAAlB,EAA8B,CAA9B,CAAjC,CAJE,CAIgE;;AAClE,eAAKrB,kBAAL,CAAwBsB,aAAxB,GAAsC,CAAtC,CALE,CAKsC;AACxC;;AACA,cAAIC,IAAI,GAAC,KAAKrB,IAAL,CAAUsB,aAAV,CAAwB/B,cAAxB,CAAT,CAPE,CAO+C;;AACjD8B,UAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQR,EAAR,CAAW,kBAAX,EAA8B,KAAKU,KAAnC,EAAyC,IAAzC,EARE,CAQ6C;;AAC/CF,UAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQR,EAAR,CAAW,gBAAX,EAA4B,KAAKW,QAAjC,EAA0C,IAA1C,EATE,CAS6C;AAClD;;AACDR,QAAAA,YAAY,CAACS,KAAD,EAAmB;AAAC;AAC5B,eAAK3B,kBAAL,CAAwB4B,iBAAxB,CAA0CvC,EAAE,CAAC,CAAD,EAAG;AAAA;AAAA,oCAASsB,IAAT,CAAckB,gBAAjB,EAAkC,CAAlC,CAA5C,EAD2B,CACuD;AACrF;;AACDJ,QAAAA,KAAK,CAACE,KAAD,EAAwB;AAAC;AAC1BG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA;AAAA;AAAA,0CAAYZ,QAAZ,CAAqBa,UAArB,GAAkC;AAAA;AAAA,gDAAeC,GAAjD,CAFyB,CAE4B;AAExD;;AACDP,QAAAA,QAAQ,CAACC,KAAD,EAAwB;AAC5BG,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;AAAA;AAAA,0CAAYZ,QAAZ,CAAqBe,KAArB,IAA4B;AAAA;AAAA,oCAASvB,IAAT,CAAcwB,UAA1C;AACH;;AACD3B,QAAAA,aAAa,GAAE;AAAC;AACZ,cAAI4B,KAAK,GAAG/C,EAAE,EAAd;AACA,eAAKW,kBAAL,CAAwBqC,iBAAxB,CAA0CD,KAA1C;;AACA,cAAGA,KAAK,CAACE,CAAN,GAAQ,CAAX,EAAa;AACT,iBAAKtC,kBAAL,CAAwBsB,aAAxB,GAAwC;AAAA;AAAA,sCAASX,IAAT,CAAc4B,kBAAtD;AACH,WAFD,MAGI;AACA,iBAAKvC,kBAAL,CAAwBsB,aAAxB,GAAwC;AAAA;AAAA,sCAASX,IAAT,CAAc6B,oBAAtD;AACH;AACJ;;AACDjC,QAAAA,QAAQ,GAAE;AAAC;AACP,cAAG,KAAKL,IAAL,CAAUuC,QAAV,CAAmBH,CAAnB,GAAqB,CAArB,IAAwB,KAAKpC,IAAL,CAAUuC,QAAV,CAAmBH,CAAnB,GAAqB,IAAhD,EAAqD;AACjD;AAAA;AAAA,4CAAYnB,QAAZ,CAAqBa,UAArB,GAAkC;AAAA;AAAA,kDAAeC,GAAjD;AACH;AACJ;;AACDxB,QAAAA,cAAc,GAAE;AAEZ,cAAIiC,CAAC,GAAG,MAAI;AAAA;AAAA,oCAAS/B,IAAT,CAAcgC,UAAd,GAAyB,EAArC;AACA,cAAIC,CAAC,GAAGvD,EAAE,EAAV;AACA,eAAKW,kBAAL,CAAwBqC,iBAAxB,CAA0CO,CAA1C;AACA,cAAIN,CAAC,GAAGM,CAAC,CAACN,CAAV;AACA,cAAIO,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUT,CAAC,GAACI,CAAZ,CAAR;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAYc,CAAC,GAAC,OAAF,GAAU,GAAtB;AAGH;;AApEmC,O;;;;;iBAGxB,I","sourcesContent":["//BirdCtrl.ts\nimport { _decorator, Component, Node, RigidBody, v3, input, Input, EventMouse, PhysicsSystem, ICollisionEvent, SphereCollider, Vec3, math, quat } from 'cc';\nimport { EnumGameStatus, GameManager } from './GameManager';\nimport { GameData } from './GameData';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BirdCtrl')\nexport class BirdCtrl extends Component {\n    //鸟所在的节点\n    @property(Node)\n    Bird:Node = null!\n    //刚体组件，提前加载并缓存以减轻游戏性能开销，提升优化\n    private RigidBodyComPonent:RigidBody = null!\n///////////////////////////////////////////////\n    onLoad(){\n        this.RigidBodyComPonent = this.Bird.getComponent(RigidBody);\n        this.init()\n    }\n    start(){\n        \n    }\n    update(){\n        this.checkPos();\n        this.changeDamping();\n        this.calculateAngel();\n    }\n///////////////////////////////////////////////\n    init(){\n        this.Bird.setPosition(v3(200,GameData.data.birdPos,0))//设置初始位置\n        this.Bird.setScale(v3(GameData.data.birdScale,GameData.data.birdScale,GameData.data.birdScale))//设置体型大小\n        input.on(Input.EventType.MOUSE_DOWN,this.onMouseClick,this);//开启输入监听\n        PhysicsSystem.instance.gravity=v3(0,-GameData.data.birdGravity,0);//设置重力\n        this.RigidBodyComPonent.linearDamping=0;//设置速度阻尼\n        //this.Bird.getComponent(Collider).on('onTriggerEnter',this.onHit,this)//原来的开启碰撞检测\n        let coms=this.Bird.getComponents(SphereCollider);//两个球体碰撞箱组件\n        coms[0].on('onCollisionEnter',this.onHit,this);//第一个碰撞箱，不使用触发器，对障碍物进行判断\n        coms[1].on('onTriggerEnter',this.getScore,this)//第二个碰撞箱，使用触发器，对分数进行判断\n    }\n    onMouseClick(event: EventMouse){//鼠标输入\n        this.RigidBodyComPonent.setLinearVelocity(v3(0,GameData.data.birdJumpStrength,0));//更改速度为向上\n    }\n    onHit(event: ICollisionEvent){//撞上柱子\n        console.log(\"Hit\");\n        GameManager.instance.gameStatus = EnumGameStatus.die;//碰撞后死亡\n\n    }\n    getScore(event: ICollisionEvent){\n        console.log(\"Scored\");\n        GameManager.instance.score+=GameData.data.brickPoint;\n    }\n    changeDamping(){//切换速度阻尼，向上阻尼大，向下阻尼小\n        let speed = v3()\n        this.RigidBodyComPonent.getLinearVelocity(speed);\n        if(speed.y>0){\n            this.RigidBodyComPonent.linearDamping = GameData.data.birdSpeedUpDamping;\n        }\n        else{\n            this.RigidBodyComPonent.linearDamping = GameData.data.birdSpeedDownDamping;\n        }\n    }\n    checkPos(){//检查鸟儿位置，离开屏幕判定为死亡\n        if(this.Bird.position.y<0||this.Bird.position.y>1920){\n            GameManager.instance.gameStatus = EnumGameStatus.die;\n        }\n    }\n    calculateAngel(){\n        \n        let x = 300+GameData.data.brickSpeed*10;\n        let v = v3();\n        this.RigidBodyComPonent.getLinearVelocity(v)\n        let y = v.y;\n        let z = Math.atan(y/x);\n        console.log(z/3.14159*180);\n        \n        \n    }\n}"]}