{"version":3,"sources":["file:///E:/04Project/Cocos/FlappyBird/assets/script/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","v3","instantiate","tween","ccclass","property","GameManager","Timer","allBricks","summonBricks","newBrick","pref_Brick","nd_BrickPlace","addChild","setPosition","push","length","shift","destroy","to","position","delay","start","checkTimer","console","log","update","deltaTime"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAcC,MAAAA,E,OAAAA,E;AAAIC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;;;;;;;OAC/D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;6BAGjBS,W,WADZF,OAAO,CAAC,aAAD,C,UAIHC,QAAQ,CAACL,MAAD,C,UAGRK,QAAQ,CAACN,IAAD,C,2BAPb,MACaO,WADb,SACiCR,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAW/BS,KAX+B,GAWvB,CAXuB;AAAA,eAa/BC,SAb+B,GAaZ,EAbY;AAAA;;AAe/BC,QAAAA,YAAY,GAAE;AAAC;AACnB,gBAAMC,QAAQ,GAACR,WAAW,CAAC,KAAKS,UAAN,CAA1B,CADkB,CAC0B;;AAC5C,eAAKC,aAAL,CAAmBC,QAAnB,CAA4BH,QAA5B,EAFkB,CAEoB;;AACtCA,UAAAA,QAAQ,CAACI,WAAT,CAAqBb,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAvB,EAHkB,CAGc;;AAChC,eAAKO,SAAL,CAAeO,IAAf,CAAoBL,QAApB,EAJkB,CAIW;;AAC7B,cAAG,KAAKF,SAAL,CAAeQ,MAAf,GAAsB,CAAzB,EAA2B;AAAC;AACxB,iBAAKR,SAAL,CAAeS,KAAf,GAAuBC,OAAvB,GADuB,CACS;AACnC,WAPiB,CAQlB;;;AACAf,UAAAA,KAAK,CAACO,QAAD,CAAL,CACCS,EADD,CACI,EADJ,EACO;AAACC,YAAAA,QAAQ,EAACnB,EAAE,CAAC,CAAC,IAAF,EAAO,CAAP,EAAS,CAAT;AAAZ,WADP,EAECoB,KAFD,CAEO,GAFP,EAGCC,KAHD;AAKH;;AAEOC,QAAAA,UAAU,GAAE;AAAC;AACjB,cAAG,KAAKhB,KAAL,GAAW,GAAd,EAAkB;AACd,iBAAKA,KAAL;AACH,WAFD,MAGI;AACA,iBAAKA,KAAL,GAAW,CAAX;AACA,iBAAKE,YAAL;AACAe,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ;;AAGDH,QAAAA,KAAK,GAAG;AACJ,eAAKb,YAAL;AACH;;AAEDiB,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKJ,UAAL;AACH;;AAjDsC,O;;;;;iBAIX,I;;;;;;;iBAGC,I","sourcesContent":["import { _decorator, Component, Node, Prefab, math, v3, instantiate, tween } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    \n    //障碍物\n    @property(Prefab)\n    private pref_Brick:Prefab = null!\n    //障碍物生成节点\n    @property(Node)\n    private nd_BrickPlace:Node = null!\n\n\n    //计时器\n    private Timer = 0\n    //所有砖块\n    private allBricks:Node[] = []\n\n    private summonBricks(){//生成砖块\n        const newBrick=instantiate(this.pref_Brick);//实例化\n        this.nd_BrickPlace.addChild(newBrick);//添加子节点\n        newBrick.setPosition(v3(0,0,0));//设置节点的相对位置\n        this.allBricks.push(newBrick)//入队尾\n        if(this.allBricks.length>8){//判断队列长度\n            this.allBricks.shift().destroy()//队首出队并销毁\n        }\n        //移动\n        tween(newBrick)\n        .to(20,{position:v3(-2000,0,0)})\n        .delay(500)\n        .start();\n        \n    }\n\n    private checkTimer(){//每一定间隔生成砖块\n        if(this.Timer<300){\n            this.Timer++;\n        }\n        else{\n            this.Timer=0;\n            this.summonBricks();\n            console.log(\"Summon\")\n        }\n    }\n    \n\n    start() {\n        this.summonBricks();\n    }\n\n    update(deltaTime: number) {\n        this.checkTimer();\n    }\n}\n\n"]}