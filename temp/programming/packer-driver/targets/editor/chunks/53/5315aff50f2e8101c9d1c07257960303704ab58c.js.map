{"version":3,"sources":["file:///E:/04Project/Cocos/FlappyBird/assets/script/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","math","v3","instantiate","tween","Label","ccclass","property","EnumGameStatus","GameManager","type","Timer","allBricks","_gameStatus","_score","gameStatus","status","init","console","log","scheduleOnce","idle","pause","die","MenuManagerScript","gameEnd","score","lb_score","string","summonBricks","rand","randomRange","newBrick","pref_Brick","nd_BrickPlace","addChild","setPosition","push","length","shift","destroy","to","position","delay","start","checkTimer","update","deltaTime"],"mappings":"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","sourcesContent":["//GameManager.ts\nimport { _decorator, Component, Node, Prefab, math, v3, instantiate, tween, Label } from 'cc';\nimport { MenuManager } from './MenuManager';\nconst { ccclass, property } = _decorator;\n\nexport enum EnumGameStatus{//游戏状态\n    init=1,//初始化\n    idle=2,//游玩\n    pause=3,//暂停\n    die=4,//死亡\n}\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    \n    //障碍物\n    @property(Prefab)\n    private pref_Brick:Prefab = null!\n    //障碍物生成节点\n    @property(Node)\n    private nd_BrickPlace:Node = null!\n    //计分板节点\n    @property(Label)\n    private lb_score:Label = null!\n    //MenuManager脚本\n    @_decorator.type('MenuManager')\n    private MenuManagerScript:MenuManager = null!\n\n///////////////////////////////////////////////\n    //计时器\n    private Timer = 0\n    //所有砖块\n    private allBricks:Node[] = []\n    //游戏状态\n    public _gameStatus:EnumGameStatus = 0;\n    //分数\n    public _score:number = 0;\n///////////////////////////////////////////////\n    //更新、获取游戏状态\n    set gameStatus(status:EnumGameStatus){\n        switch(status){\n            case EnumGameStatus.init://初始化\n                console.log(\"Status:init\");\n                this.scheduleOnce(()=>{\n                    this.gameStatus=EnumGameStatus.idle;\n                },0.2)//延迟0.2s后切换状态\n                break;\n            case EnumGameStatus.idle:\n                console.log(\"Status:idle\");\n                break;\n            case EnumGameStatus.pause:\n                console.log(\"Status:pause\");\n                break;\n            case EnumGameStatus.die:\n                console.log(\"Status:die\");\n                this.MenuManagerScript.gameEnd();//执行游戏结束的函数\n                break;\n            default:\n                console.log(\"Error:Wrong game status!\")\n                this.gameStatus=EnumGameStatus.die;\n        }\n        this._gameStatus=status;\n    }\n    get gameStatus(){\n        return this._gameStatus;\n    }\n    //更新、获取游戏分数\n    set score(score:number){\n        this.lb_score.string = `Score:${score}`\n        this._score=score;\n    }\n    get score(){\n        return this._score;\n    }\n///////////////////////////////////////////////\n    private summonBricks(){//生成砖块\n        let rand = math.randomRange(-200,200);//随机数\n        const newBrick=instantiate(this.pref_Brick);//实例化\n        this.nd_BrickPlace.addChild(newBrick);//添加子节点\n        newBrick.setPosition(v3(0,rand,0));//设置节点的相对位置\n        this.allBricks.push(newBrick)//入队尾\n        if(this.allBricks.length>8){//判断队列长度\n            this.allBricks.shift().destroy()//队首出队并销毁\n        }\n        tween(newBrick)//移动\n        .to(20,{position:v3(-2000,rand,0)})\n        .delay(500)\n        .start();\n    }\n\n    private checkTimer(){//每一定间隔生成砖块\n        if(this.Timer<300){\n            this.Timer++;\n        }\n        else{\n            this.Timer=0;\n            this.summonBricks();\n            console.log(\"Summon\")\n        }\n    }\n///////////////////////////////////////////////\n    start() {\n        this.summonBricks();\n        this.gameStatus=EnumGameStatus.init;//初始化游戏\n    }\n\n    update(deltaTime: number) {\n        this.checkTimer();\n    }\n}\n"]}