{"version":3,"sources":["file:///E:/04Project/Cocos/FlappyBird2/assets/script/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","math","v3","instantiate","tween","Label","director","macro","GameData","MenuManager","ccclass","property","EnumGameStatus","GameManager","Timer","_gameStatus","_score","gameStatus","status","init","console","log","instance","idle","pause","die","gameEnd","score","lb_score","string","isPaused","resume","nd_BrickPlace","removeAllChildren","nd_BackgroundPlace","summonBricks","summonFirstBackground","summonBackground","scheduleOnce","rand","randomRange","data","brickSpawnRand","newBrick","pref_Brick","up","getChildByName","down","pos","brickHeight","scale","brickWidth","setPosition","setScale","addChild","to","position","brickSpeed","call","destroy","start","newBackground","pref_Background","checkTimer","brickSpawnTime","onLoad","scheduler","getScheduler","schedule","REPEAT_FOREVER","update","deltaTime"],"mappings":"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","sourcesContent":["//GameManager.ts\nimport { _decorator, Component, Node, Prefab, math, v3, instantiate, tween, Label, director, macro, Scheduler } from 'cc';\nimport { GameData } from './GameData';\nimport { MenuManager } from './MenuManager';\nconst { ccclass, property } = _decorator;\n\nexport enum EnumGameStatus{//游戏状态\n    init=1,//初始化\n    idle=2,//游玩\n    pause=3,//暂停\n    die=4,//死亡\n}\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    \n    //障碍物\n    @property(Prefab)\n    private pref_Brick:Prefab = null!\n    //背景\n    @property(Prefab)\n    private pref_Background:Prefab = null!\n    //障碍物生成节点\n    @property(Node)\n    private nd_BrickPlace:Node = null!\n    //背景生成节点\n    @property(Node)\n    private nd_BackgroundPlace:Node = null!\n    //计分板节点\n    @property(Label)\n    private lb_score:Label = null!\n\n///////////////////////////////////////////////\n    //GameManager单例\n    public static instance:GameManager = null!;\n    //计时器\n    private Timer = 1;\n    //游戏状态\n    public _gameStatus:EnumGameStatus = 0;\n    //分数\n    public _score:number = 0;\n///////////////////////////////////////////////\n    //更新、获取游戏状态\n    set gameStatus(status:EnumGameStatus){\n        switch(status){\n            case EnumGameStatus.init://初始化\n                console.log(\"Status:init\");\n                GameManager.instance.init();//初始化的函数\n                break;\n            case EnumGameStatus.idle:\n                console.log(\"Status:idle\");\n                break;\n            case EnumGameStatus.pause:\n                console.log(\"Status:pause\");\n                break;\n            case EnumGameStatus.die:\n                console.log(\"Status:die\");\n                MenuManager.instance.gameEnd();//执行游戏结束的函数\n                break;\n            default:\n                console.log(\"Error:Wrong game status!\")\n                GameManager.instance.gameStatus=EnumGameStatus.die;\n        }\n        GameManager.instance._gameStatus=status;\n    }\n    get gameStatus(){\n        return GameManager.instance._gameStatus;\n    }\n    //更新、获取游戏分数\n    set score(score:number){\n        GameManager.instance.lb_score.string = `${score}`\n        GameManager.instance._score=score;\n    }\n    get score(){\n        return GameManager.instance._score;\n    }\n///////////////////////////////////////////////\n    private init(){//初始化\n        if(director.isPaused()){//判断场景状态(是否二次加载)\n            director.resume();\n        }\n        GameManager.instance.nd_BrickPlace.removeAllChildren();//移除所有子节点（障碍物）\n        GameManager.instance.nd_BackgroundPlace.removeAllChildren();//移除所有子节点（背景）\n        GameManager.instance.score=0;//分数归零\n        GameManager.instance.Timer=0;//计时器归零\n        GameManager.instance.summonBricks();//生成第一个障碍物\n        GameManager.instance.summonFirstBackground();//生成第一个背景\n        GameManager.instance.summonBackground();\n        GameManager.instance.scheduleOnce(()=>{\n            GameManager.instance.gameStatus=EnumGameStatus.idle;\n        },0.2)//延迟0.2s后切换状态\n    }\n    private summonBricks(){//生成砖块\n        if(GameManager.instance.gameStatus == EnumGameStatus.die){//死了就不会继续生成了\n            return;\n        }\n        let rand = math.randomRange(-GameData.data.brickSpawnRand,GameData.data.brickSpawnRand);//随机数\n        const newBrick=instantiate(GameManager.instance.pref_Brick);//实例化\n        {//自定义部分\n            let up = newBrick.getChildByName(\"Up\")//障碍物的上半部分\n            let down = newBrick.getChildByName(\"Down\")//障碍物的下半部分\n            let score = newBrick.getChildByName(\"Score\")//障碍物的得分检测碰撞箱\n            let pos = GameData.data.brickHeight/2+2000;\n            let scale = 30*GameData.data.brickWidth\n            up.setPosition(v3(0,pos,0));\n            down.setPosition(v3(0,-pos,0));\n            up.setScale(v3(scale,2000,30));\n            down.setScale(v3(scale,2000,30));\n            score.setScale(v3(1,GameData.data.brickHeight,30));\n        }\n        GameManager.instance.nd_BrickPlace.addChild(newBrick);//添加子节点\n        newBrick.setPosition(v3(0,rand,0));//设置节点的相对位置\n        tween(newBrick)//移动\n        .to(10,{position:v3(-(1500+GameData.data.brickSpeed*100),rand,0)})\n        .call(()=>{\n            newBrick.destroy();\n        })\n        .start();\n    }\n    private summonBackground(){\n        const newBackground = instantiate(GameManager.instance.pref_Background);\n        GameManager.instance.nd_BackgroundPlace.addChild(newBackground);\n        newBackground.setPosition(v3(0,0,0));\n        tween(newBackground)\n        .to(10,{position:v3(-2160,0,0)})\n        .call(()=>{\n            newBackground.destroy();\n        })\n        .start()\n    }\n    private summonFirstBackground(){\n        const newBackground = instantiate(GameManager.instance.pref_Background);\n        GameManager.instance.nd_BackgroundPlace.addChild(newBackground);\n        newBackground.setPosition(v3(-1080,0,0));\n        tween(newBackground)\n        .to(10,{position:v3(-3240,0,0)})\n        .call(()=>{\n            newBackground.destroy();\n        })\n        .start()\n    }\n    private checkTimer(){\n        if((GameManager.instance.Timer%GameData.data.brickSpawnTime)==0){\n            GameManager.instance.summonBricks();//每一定间隔生成砖块\n        }\n        if(GameManager.instance.Timer%300==0){\n            this.summonBackground();\n        }\n        \n    }\n\n///////////////////////////////////////////////\n    onLoad(){\n        GameManager.instance = this;//绑定单例\n        GameManager.instance.gameStatus=EnumGameStatus.init;//初始化游戏\n    }\n    start(){\n        let scheduler:Scheduler = director.getScheduler();\n        scheduler.schedule(this.summonBackground,this,5,macro.REPEAT_FOREVER,0,false);\n        scheduler.schedule(this.summonBricks,this,5,macro.REPEAT_FOREVER,0,false);\n    }\n    update(deltaTime: number) {\n        GameManager.instance.Timer++;//帧计时器+1\n        //GameManager.instance.checkTimer();\n\n    }\n}"]}