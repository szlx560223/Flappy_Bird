{"version":3,"sources":["file:///E:/04Project/Cocos/FlappyBird2/assets/script/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","math","v3","instantiate","tween","Label","director","macro","GameData","MenuManager","ccclass","property","EnumGameStatus","GameManager","Timer","allBricks","_gameStatus","_score","gameStatus","status","init","console","log","instance","idle","pause","die","gameEnd","score","lb_score","string","isPaused","resume","nd_BrickPlace","removeAllChildren","nd_BackgroundPlace","summonBricks","summonFirstBackground","summonBackground","scheduleOnce","rand","randomRange","data","brickSpawnRand","newBrick","pref_Brick","up","getChildByName","down","pos","brickHeight","scale","brickWidth","setPosition","setScale","addChild","push","length","shift","destroy","to","position","brickSpeed","start","checkTimer","brickSpawnTime","newBackground","pref_Background","call","onLoad","scheduler","getScheduler","schedule","REPEAT_FOREVER","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,E,OAAAA,E;AAAIC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,K,OAAAA,K;;AACpFC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBd,U;;iBAElBe,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;SAAAA,c,8BAAAA,c;;6BAOCC,W,WADZH,OAAO,CAAC,aAAD,C,UAIHC,QAAQ,CAACX,MAAD,C,UAGRW,QAAQ,CAACX,MAAD,C,UAGRW,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACN,KAAD,C,sCAhBb,MACaQ,WADb,SACiCf,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAsB/BgB,KAtB+B,GAsBvB,CAtBuB;AAAA,eAwB/BC,SAxB+B,GAwBZ,EAxBY;AAAA,eA0BhCC,WA1BgC,GA0BH,CA1BG;AAAA,eA4BhCC,MA5BgC,GA4BhB,CA5BgB;AAAA;;AA6B3C;AACI;AACc,YAAVC,UAAU,CAACC,MAAD,EAAuB;AACjC,kBAAOA,MAAP;AACI,iBAAKP,cAAc,CAACQ,IAApB;AAAyB;AACrBC,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAT,cAAAA,WAAW,CAACU,QAAZ,CAAqBH,IAArB,GAFJ,CAEgC;;AAC5B;;AACJ,iBAAKR,cAAc,CAACY,IAApB;AACIH,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;;AACJ,iBAAKV,cAAc,CAACa,KAApB;AACIJ,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;AACJ,iBAAKV,cAAc,CAACc,GAApB;AACIL,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;AAAA;AAAA,8CAAYC,QAAZ,CAAqBI,OAArB,GAFJ,CAEmC;;AAC/B;;AACJ;AACIN,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAT,cAAAA,WAAW,CAACU,QAAZ,CAAqBL,UAArB,GAAgCN,cAAc,CAACc,GAA/C;AAjBR;;AAmBAb,UAAAA,WAAW,CAACU,QAAZ,CAAqBP,WAArB,GAAiCG,MAAjC;AACH;;AACa,YAAVD,UAAU,GAAE;AACZ,iBAAOL,WAAW,CAACU,QAAZ,CAAqBP,WAA5B;AACH,SAvDsC,CAwDvC;;;AACS,YAALY,KAAK,CAACA,KAAD,EAAc;AACnBf,UAAAA,WAAW,CAACU,QAAZ,CAAqBM,QAArB,CAA8BC,MAA9B,GAAwC,GAAEF,KAAM,EAAhD;AACAf,UAAAA,WAAW,CAACU,QAAZ,CAAqBN,MAArB,GAA4BW,KAA5B;AACH;;AACQ,YAALA,KAAK,GAAE;AACP,iBAAOf,WAAW,CAACU,QAAZ,CAAqBN,MAA5B;AACH,SA/DsC,CAgE3C;;;AACYG,QAAAA,IAAI,GAAE;AAAC;AACX,cAAGd,QAAQ,CAACyB,QAAT,EAAH,EAAuB;AAAC;AACpBzB,YAAAA,QAAQ,CAAC0B,MAAT;AACH;;AACDnB,UAAAA,WAAW,CAACU,QAAZ,CAAqBR,SAArB,GAA+B,EAA/B,CAJU,CAIwB;;AAClCF,UAAAA,WAAW,CAACU,QAAZ,CAAqBU,aAArB,CAAmCC,iBAAnC,GALU,CAK6C;;AACvDrB,UAAAA,WAAW,CAACU,QAAZ,CAAqBY,kBAArB,CAAwCD,iBAAxC,GANU,CAMkD;;AAC5DrB,UAAAA,WAAW,CAACU,QAAZ,CAAqBK,KAArB,GAA2B,CAA3B,CAPU,CAOmB;;AAC7Bf,UAAAA,WAAW,CAACU,QAAZ,CAAqBT,KAArB,GAA2B,CAA3B,CARU,CAQmB;;AAC7BD,UAAAA,WAAW,CAACU,QAAZ,CAAqBa,YAArB,GATU,CAS0B;;AACpCvB,UAAAA,WAAW,CAACU,QAAZ,CAAqBc,qBAArB,GAVU,CAUmC;;AAC7CxB,UAAAA,WAAW,CAACU,QAAZ,CAAqBe,gBAArB,GAXU,CAW8B;;AACxCzB,UAAAA,WAAW,CAACU,QAAZ,CAAqBgB,YAArB,CAAkC,MAAI;AAClC1B,YAAAA,WAAW,CAACU,QAAZ,CAAqBL,UAArB,GAAgCN,cAAc,CAACY,IAA/C;AACH,WAFD,EAEE,GAFF,EAZU,CAcJ;AACT;;AACOY,QAAAA,YAAY,GAAE;AAAC;AACnB,cAAGvB,WAAW,CAACU,QAAZ,CAAqBL,UAArB,IAAmCN,cAAc,CAACc,GAArD,EAAyD;AAAC;AACtD;AACH;;AACD,cAAIc,IAAI,GAAGvC,IAAI,CAACwC,WAAL,CAAiB,CAAC;AAAA;AAAA,oCAASC,IAAT,CAAcC,cAAhC,EAA+C;AAAA;AAAA,oCAASD,IAAT,CAAcC,cAA7D,CAAX,CAJkB,CAIsE;;AACxF,gBAAMC,QAAQ,GAACzC,WAAW,CAACU,WAAW,CAACU,QAAZ,CAAqBsB,UAAtB,CAA1B,CALkB,CAK0C;;AAC5D;AAAC;AACG,gBAAIC,EAAE,GAAGF,QAAQ,CAACG,cAAT,CAAwB,IAAxB,CAAT,CADJ,CAC0C;;AACtC,gBAAIC,IAAI,GAAGJ,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAX,CAFJ,CAE8C;;AAC1C,gBAAInB,KAAK,GAAGgB,QAAQ,CAACG,cAAT,CAAwB,OAAxB,CAAZ,CAHJ,CAGgD;;AAC5C,gBAAIE,GAAG,GAAG;AAAA;AAAA,sCAASP,IAAT,CAAcQ,WAAd,GAA0B,CAA1B,GAA4B,IAAtC;AACA,gBAAIC,KAAK,GAAG,KAAG;AAAA;AAAA,sCAAST,IAAT,CAAcU,UAA7B;AACAN,YAAAA,EAAE,CAACO,WAAH,CAAenD,EAAE,CAAC,CAAD,EAAG+C,GAAH,EAAO,CAAP,CAAjB;AACAD,YAAAA,IAAI,CAACK,WAAL,CAAiBnD,EAAE,CAAC,CAAD,EAAG,CAAC+C,GAAJ,EAAQ,CAAR,CAAnB;AACAH,YAAAA,EAAE,CAACQ,QAAH,CAAYpD,EAAE,CAACiD,KAAD,EAAO,IAAP,EAAY,EAAZ,CAAd;AACAH,YAAAA,IAAI,CAACM,QAAL,CAAcpD,EAAE,CAACiD,KAAD,EAAO,IAAP,EAAY,EAAZ,CAAhB;AACAvB,YAAAA,KAAK,CAAC0B,QAAN,CAAepD,EAAE,CAAC,CAAD,EAAG;AAAA;AAAA,sCAASwC,IAAT,CAAcQ,WAAjB,EAA6B,EAA7B,CAAjB;AACH;AACDrC,UAAAA,WAAW,CAACU,QAAZ,CAAqBU,aAArB,CAAmCsB,QAAnC,CAA4CX,QAA5C,EAlBkB,CAkBoC;;AACtDA,UAAAA,QAAQ,CAACS,WAAT,CAAqBnD,EAAE,CAAC,CAAD,EAAGsC,IAAH,EAAQ,CAAR,CAAvB,EAnBkB,CAmBiB;;AACnC3B,UAAAA,WAAW,CAACU,QAAZ,CAAqBR,SAArB,CAA+ByC,IAA/B,CAAoCZ,QAApC,EApBkB,CAoB2B;;AAC7C,cAAG/B,WAAW,CAACU,QAAZ,CAAqBR,SAArB,CAA+B0C,MAA/B,GAAsC,CAAzC,EAA2C;AAAC;AACxC5C,YAAAA,WAAW,CAACU,QAAZ,CAAqBR,SAArB,CAA+B2C,KAA/B,GAAuCC,OAAvC,GADuC,CACS;AACnD;;AACDvD,UAAAA,KAAK,CAACwC,QAAD,CAAL,CAAe;AAAf,WACCgB,EADD,CACI,EADJ,EACO;AAACC,YAAAA,QAAQ,EAAC3D,EAAE,CAAC,EAAE,OAAK;AAAA;AAAA,sCAASwC,IAAT,CAAcoB,UAAd,GAAyB,GAAhC,CAAD,EAAsCtB,IAAtC,EAA2C,CAA3C;AAAZ,WADP,EAECuB,KAFD;AAGH;;AAEOC,QAAAA,UAAU,GAAE;AAAC;AACjB,cAAGnD,WAAW,CAACU,QAAZ,CAAqBT,KAArB,GAA2B;AAAA;AAAA,oCAAS4B,IAAT,CAAcuB,cAA5C,EAA2D;AACvDpD,YAAAA,WAAW,CAACU,QAAZ,CAAqBT,KAArB;AACH,WAFD,MAGI;AACAD,YAAAA,WAAW,CAACU,QAAZ,CAAqBT,KAArB,GAA2B,CAA3B;AACAD,YAAAA,WAAW,CAACU,QAAZ,CAAqBa,YAArB;AACAf,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ;;AACOgB,QAAAA,gBAAgB,GAAE;AAAC;AACvB,gBAAM4B,aAAa,GAAG/D,WAAW,CAACU,WAAW,CAACU,QAAZ,CAAqB4C,eAAtB,CAAjC;AACAtD,UAAAA,WAAW,CAACU,QAAZ,CAAqBY,kBAArB,CAAwCoB,QAAxC,CAAiDW,aAAjD;AACAA,UAAAA,aAAa,CAACb,WAAd,CAA0BnD,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAA5B;AACAE,UAAAA,KAAK,CAAC8D,aAAD,CAAL,CACCN,EADD,CACI,EADJ,EACO;AAACC,YAAAA,QAAQ,EAAC3D,EAAE,CAAC,CAAC,IAAF,EAAO,CAAP,EAAS,CAAT;AAAZ,WADP,EAECkE,IAFD,CAEM,MAAI;AACNF,YAAAA,aAAa,CAACP,OAAd,GADM,CACkB;AAC3B,WAJD,EAKCI,KALD;AAMH;;AACO1B,QAAAA,qBAAqB,GAAE;AAAC;AAC5B,gBAAM6B,aAAa,GAAG/D,WAAW,CAACU,WAAW,CAACU,QAAZ,CAAqB4C,eAAtB,CAAjC;AACAtD,UAAAA,WAAW,CAACU,QAAZ,CAAqBY,kBAArB,CAAwCoB,QAAxC,CAAiDW,aAAjD;AACAA,UAAAA,aAAa,CAACb,WAAd,CAA0BnD,EAAE,CAAC,CAAC,IAAF,EAAO,CAAP,EAAS,CAAT,CAA5B;AACAE,UAAAA,KAAK,CAAC8D,aAAD,CAAL,CACCN,EADD,CACI,EADJ,EACO;AAACC,YAAAA,QAAQ,EAAC3D,EAAE,CAAC,CAAC,IAAF,EAAO,CAAP,EAAS,CAAT;AAAZ,WADP,EAECkE,IAFD,CAEM,MAAI;AACNF,YAAAA,aAAa,CAACP,OAAd,GADM,CACkB;AAC3B,WAJD,EAKCI,KALD;AAMH,SA7IsC,CA+I3C;;;AACIM,QAAAA,MAAM,GAAE;AACJxD,UAAAA,WAAW,CAACU,QAAZ,GAAuB,IAAvB,CADI,CACwB;;AAC5BV,UAAAA,WAAW,CAACU,QAAZ,CAAqBL,UAArB,GAAgCN,cAAc,CAACQ,IAA/C,CAFI,CAEgD;AACvD;;AACD2C,QAAAA,KAAK,GAAE;AACH,cAAIO,SAAmB,GAAGhE,QAAQ,CAACiE,YAAT,EAA1B;AACAD,UAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKlC,gBAAxB,EAAyC,IAAzC,EAA8C,CAA9C,EAAgD/B,KAAK,CAACkE,cAAtD,EAAqE,CAArE,EAAuE,KAAvE;AACH;;AACDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB9D,UAAAA,WAAW,CAACU,QAAZ,CAAqByC,UAArB;AACH;;AA1JsC,O,UAoBzBzC,Q,GAAuB,I;;;;;iBAhBT,I;;;;;;;iBAGK,I;;;;;;;iBAGJ,I;;;;;;;iBAGK,I;;;;;;;iBAGT,I","sourcesContent":["//GameManager.ts\nimport { _decorator, Component, Node, Prefab, math, v3, instantiate, tween, Label, director, macro, Scheduler } from 'cc';\nimport { GameData } from './GameData';\nimport { MenuManager } from './MenuManager';\nconst { ccclass, property } = _decorator;\n\nexport enum EnumGameStatus{//游戏状态\n    init=1,//初始化\n    idle=2,//游玩\n    pause=3,//暂停\n    die=4,//死亡\n}\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    \n    //障碍物\n    @property(Prefab)\n    private pref_Brick:Prefab = null!\n    //背景\n    @property(Prefab)\n    private pref_Background:Prefab = null!\n    //障碍物生成节点\n    @property(Node)\n    private nd_BrickPlace:Node = null!\n    //背景生成节点\n    @property(Node)\n    private nd_BackgroundPlace:Node = null!\n    //计分板节点\n    @property(Label)\n    private lb_score:Label = null!\n\n///////////////////////////////////////////////\n    //GameManager单例\n    public static instance:GameManager = null!\n    //计时器\n    private Timer = 0\n    //所有砖块\n    private allBricks:Node[] = []\n    //游戏状态\n    public _gameStatus:EnumGameStatus = 0;\n    //分数\n    public _score:number = 0;\n///////////////////////////////////////////////\n    //更新、获取游戏状态\n    set gameStatus(status:EnumGameStatus){\n        switch(status){\n            case EnumGameStatus.init://初始化\n                console.log(\"Status:init\");\n                GameManager.instance.init();//初始化的函数\n                break;\n            case EnumGameStatus.idle:\n                console.log(\"Status:idle\");\n                break;\n            case EnumGameStatus.pause:\n                console.log(\"Status:pause\");\n                break;\n            case EnumGameStatus.die:\n                console.log(\"Status:die\");\n                MenuManager.instance.gameEnd();//执行游戏结束的函数\n                break;\n            default:\n                console.log(\"Error:Wrong game status!\")\n                GameManager.instance.gameStatus=EnumGameStatus.die;\n        }\n        GameManager.instance._gameStatus=status;\n    }\n    get gameStatus(){\n        return GameManager.instance._gameStatus;\n    }\n    //更新、获取游戏分数\n    set score(score:number){\n        GameManager.instance.lb_score.string = `${score}`\n        GameManager.instance._score=score;\n    }\n    get score(){\n        return GameManager.instance._score;\n    }\n///////////////////////////////////////////////\n    private init(){//初始化\n        if(director.isPaused()){//判断场景状态(是否二次加载)\n            director.resume();\n        }\n        GameManager.instance.allBricks=[];//清除数组\n        GameManager.instance.nd_BrickPlace.removeAllChildren();//移除所有子节点（障碍物）\n        GameManager.instance.nd_BackgroundPlace.removeAllChildren();//移除所有子节点（背景）\n        GameManager.instance.score=0;//分数归零\n        GameManager.instance.Timer=0;//计时器归零\n        GameManager.instance.summonBricks();//生成第一个障碍物\n        GameManager.instance.summonFirstBackground();//生成第一个背景\n        GameManager.instance.summonBackground();//生成背景\n        GameManager.instance.scheduleOnce(()=>{\n            GameManager.instance.gameStatus=EnumGameStatus.idle;\n        },0.2)//延迟0.2s后切换状态\n    }\n    private summonBricks(){//生成砖块\n        if(GameManager.instance.gameStatus == EnumGameStatus.die){//死了就不会继续生成了\n            return;\n        }\n        let rand = math.randomRange(-GameData.data.brickSpawnRand,GameData.data.brickSpawnRand);//随机数\n        const newBrick=instantiate(GameManager.instance.pref_Brick);//实例化\n        {//自定义部分\n            let up = newBrick.getChildByName(\"Up\")//障碍物的上半部分\n            let down = newBrick.getChildByName(\"Down\")//障碍物的下半部分\n            let score = newBrick.getChildByName(\"Score\")//障碍物的得分检测碰撞箱\n            let pos = GameData.data.brickHeight/2+1000;\n            let scale = 40*GameData.data.brickWidth;\n            up.setPosition(v3(0,pos,0));\n            down.setPosition(v3(0,-pos,0));\n            up.setScale(v3(scale,2000,30));\n            down.setScale(v3(scale,2000,30));\n            score.setScale(v3(1,GameData.data.brickHeight,30));\n        }\n        GameManager.instance.nd_BrickPlace.addChild(newBrick);//添加子节点\n        newBrick.setPosition(v3(0,rand,0));//设置节点的相对位置\n        GameManager.instance.allBricks.push(newBrick)//入队尾\n        if(GameManager.instance.allBricks.length>8){//判断队列长度\n            GameManager.instance.allBricks.shift().destroy()//队首出队并销毁\n        }\n        tween(newBrick)//移动\n        .to(10,{position:v3(-(1500+GameData.data.brickSpeed*100),rand,0)})\n        .start();\n    }\n\n    private checkTimer(){//每一定间隔生成砖块\n        if(GameManager.instance.Timer<GameData.data.brickSpawnTime){\n            GameManager.instance.Timer++;\n        }\n        else{\n            GameManager.instance.Timer=0;\n            GameManager.instance.summonBricks();\n            console.log(\"Summon\")\n        }\n    }\n    private summonBackground(){//生成背景\n        const newBackground = instantiate(GameManager.instance.pref_Background);\n        GameManager.instance.nd_BackgroundPlace.addChild(newBackground);\n        newBackground.setPosition(v3(0,0,0));\n        tween(newBackground)\n        .to(10,{position:v3(-2160,0,0)})\n        .call(()=>{\n            newBackground.destroy();//使用回调函数清除\n        })\n        .start()\n    }\n    private summonFirstBackground(){//生成第一个背景\n        const newBackground = instantiate(GameManager.instance.pref_Background);\n        GameManager.instance.nd_BackgroundPlace.addChild(newBackground);\n        newBackground.setPosition(v3(-1080,0,0));\n        tween(newBackground)\n        .to(10,{position:v3(-3240,0,0)})\n        .call(()=>{\n            newBackground.destroy();//使用回调函数清除\n        })\n        .start()\n    }\n\n///////////////////////////////////////////////\n    onLoad(){\n        GameManager.instance = this;//绑定单例\n        GameManager.instance.gameStatus=EnumGameStatus.init;//初始化游戏\n    }\n    start(){\n        let scheduler:Scheduler = director.getScheduler();\n        scheduler.schedule(this.summonBackground,this,5,macro.REPEAT_FOREVER,0,false);\n    }\n    update(deltaTime: number) {\n        GameManager.instance.checkTimer();\n    }\n}"]}