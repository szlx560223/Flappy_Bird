{"version":3,"sources":["file:///E:/04Project/Cocos/FlappyBird/assets/script/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","math","v3","instantiate","tween","Label","director","MenuManager","ccclass","property","EnumGameStatus","GameManager","Timer","allBricks","_gameStatus","_score","gameStatus","status","init","console","log","instance","idle","pause","die","gameEnd","score","lb_score","string","isPaused","resume","nd_BrickPlace","removeAllChildren","scheduleOnce","summonBricks","rand","randomRange","newBrick","pref_Brick","addChild","setPosition","push","length","shift","destroy","to","position","delay","start","checkTimer","onLoad","update","deltaTime"],"mappings":"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","sourcesContent":["//GameManager.ts\nimport { _decorator, Component, Node, Prefab, math, v3, instantiate, tween, Label, director } from 'cc';\nimport { MenuManager } from './MenuManager';\nconst { ccclass, property } = _decorator;\n\nexport enum EnumGameStatus{//游戏状态\n    init=1,//初始化\n    idle=2,//游玩\n    pause=3,//暂停\n    die=4,//死亡\n}\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    \n    //障碍物\n    @property(Prefab)\n    private pref_Brick:Prefab = null!\n    //障碍物生成节点\n    @property(Node)\n    private nd_BrickPlace:Node = null!\n    //计分板节点\n    @property(Label)\n    private lb_score:Label = null!\n\n///////////////////////////////////////////////\n    //GameManager单例\n    public static instance:GameManager = null!\n    //计时器\n    private Timer = 0\n    //所有砖块\n    private allBricks:Node[] = []\n    //游戏状态\n    public _gameStatus:EnumGameStatus = 0;\n    //分数\n    public _score:number = 0;\n///////////////////////////////////////////////\n    //更新、获取游戏状态\n    set gameStatus(status:EnumGameStatus){\n        switch(status){\n            case EnumGameStatus.init://初始化\n                console.log(\"Status:init\");\n                GameManager.instance.init();//初始化的函数\n                break;\n            case EnumGameStatus.idle:\n                console.log(\"Status:idle\");\n                break;\n            case EnumGameStatus.pause:\n                console.log(\"Status:pause\");\n                break;\n            case EnumGameStatus.die:\n                console.log(\"Status:die\");\n                MenuManager.instance.gameEnd();//执行游戏结束的函数\n                break;\n            default:\n                console.log(\"Error:Wrong game status!\")\n                GameManager.instance.gameStatus=EnumGameStatus.die;\n        }\n        GameManager.instance._gameStatus=status;\n    }\n    get gameStatus(){\n        return GameManager.instance._gameStatus;\n    }\n    //更新、获取游戏分数\n    set score(score:number){\n        GameManager.instance.lb_score.string = `Score:${score}`\n        GameManager.instance._score=score;\n    }\n    get score(){\n        return GameManager.instance._score;\n    }\n///////////////////////////////////////////////\n    private init(){//初始化\n        if(director.isPaused()){//判断场景状态(是否二次加载)\n            director.resume();\n        }\n        GameManager.instance.allBricks=[];//清除数组\n        GameManager.instance.nd_BrickPlace.removeAllChildren();//移除所有子节点（障碍物）\n        GameManager.instance.score=0;//分数归零\n        GameManager.instance.Timer=0;//计时器归零\n        GameManager.instance.scheduleOnce(()=>{\n            GameManager.instance.gameStatus=EnumGameStatus.idle;\n        },0.2)//延迟0.2s后切换状态\n    }\n    private summonBricks(){//生成砖块\n        if(GameManager.instance.gameStatus == EnumGameStatus.die){//死了就不会继续生成了\n            return;\n        }\n        let rand = math.randomRange(-200,200);//随机数\n        const newBrick=instantiate(GameManager.instance.pref_Brick);//实例化\n        GameManager.instance.nd_BrickPlace.addChild(newBrick);//添加子节点\n        newBrick.setPosition(v3(0,rand,0));//设置节点的相对位置\n        GameManager.instance.allBricks.push(newBrick)//入队尾\n        if(GameManager.instance.allBricks.length>8){//判断队列长度\n            GameManager.instance.allBricks.shift().destroy()//队首出队并销毁\n        }\n        tween(newBrick)//移动\n        .to(20,{position:v3(-2000,rand,0)})\n        .delay(500)\n        .start();\n    }\n\n    private checkTimer(){//每一定间隔生成砖块\n        if(GameManager.instance.Timer<300){\n            GameManager.instance.Timer++;\n        }\n        else{\n            GameManager.instance.Timer=0;\n            GameManager.instance.summonBricks();\n            console.log(\"Summon\")\n        }\n    }\n///////////////////////////////////////////////\n    onLoad(){\n        GameManager.instance = this;//绑定单例\n        GameManager.instance.gameStatus=EnumGameStatus.init;//初始化游戏\n    }\n    start(){\n        GameManager.instance.summonBricks();//生成第一个障碍物\n    }\n    update(deltaTime: number) {\n        GameManager.instance.checkTimer();\n    }\n}"]}