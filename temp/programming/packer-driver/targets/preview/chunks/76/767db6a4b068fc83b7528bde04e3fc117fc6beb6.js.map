{"version":3,"sources":["file:///E:/04Project/Cocos/FlappyBird/assets/script/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","math","v3","instantiate","tween","Label","director","MenuManager","ccclass","property","EnumGameStatus","GameManager","Timer","allBricks","_gameStatus","_score","gameStatus","status","init","console","log","idle","pause","die","MenuManagerScript","gameEnd","score","lb_score","string","isPaused","resume","nd_BrickPlace","removeAllChildren","pauseMenu","active","endMenu","summonBricks","scheduleOnce","rand","randomRange","newBrick","pref_Brick","addChild","setPosition","push","length","shift","destroy","to","position","delay","start","checkTimer","onLoad","update","deltaTime"],"mappings":"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","sourcesContent":["//GameManager.ts\nimport { _decorator, Component, Node, Prefab, math, v3, instantiate, tween, Label, director } from 'cc';\nimport { MenuManager } from './MenuManager';\nconst { ccclass, property } = _decorator;\n\nexport enum EnumGameStatus{//游戏状态\n    init=1,//初始化\n    idle=2,//游玩\n    pause=3,//暂停\n    die=4,//死亡\n}\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    \n    //障碍物\n    @property(Prefab)\n    private pref_Brick:Prefab = null!\n    //障碍物生成节点\n    @property(Node)\n    private nd_BrickPlace:Node = null!\n    //计分板节点\n    @property(Label)\n    private lb_score:Label = null!\n    //MenuManager脚本\n    @property(MenuManager)\n    private MenuManagerScript:MenuManager = null!\n\n///////////////////////////////////////////////\n    //计时器\n    private Timer = 0\n    //所有砖块\n    private allBricks:Node[] = []\n    //游戏状态\n    public _gameStatus:EnumGameStatus = 0;\n    //分数\n    public _score:number = 0;\n///////////////////////////////////////////////\n    //更新、获取游戏状态\n    set gameStatus(status:EnumGameStatus){\n        switch(status){\n            case EnumGameStatus.init://初始化\n                console.log(\"Status:init\");\n                this.init();//初始化的函数\n                break;\n            case EnumGameStatus.idle:\n                console.log(\"Status:idle\");\n                break;\n            case EnumGameStatus.pause:\n                console.log(\"Status:pause\");\n                break;\n            case EnumGameStatus.die:\n                console.log(\"Status:die\");\n                this.MenuManagerScript.gameEnd();//执行游戏结束的函数\n                break;\n            default:\n                console.log(\"Error:Wrong game status!\")\n                this.gameStatus=EnumGameStatus.die;\n        }\n        this._gameStatus=status;\n    }\n    get gameStatus(){\n        return this._gameStatus;\n    }\n    //更新、获取游戏分数\n    set score(score:number){\n        this.lb_score.string = `Score:${score}`\n        this._score=score;\n    }\n    get score(){\n        return this._score;\n    }\n///////////////////////////////////////////////\n    private init(){//初始化\n        if(director.isPaused()){//判断场景状态(是否二次加载)\n            director.resume();\n        }\n        this.allBricks=[];//清除数组\n        this.nd_BrickPlace.removeAllChildren();//移除所有子节点（障碍物）\n        this.score=0;//分数归零\n        this.Timer=0;//计时器归零\n        this.MenuManagerScript.pauseMenu.active=false;//关闭暂停菜单\n        this.MenuManagerScript.endMenu.active=false;//关闭结算菜单\n        this.summonBricks();//生成第一个障碍物\n        this.scheduleOnce(()=>{\n            this.gameStatus=EnumGameStatus.idle;\n        },0.2)//延迟0.2s后切换状态\n    }\n    private summonBricks(){//生成砖块\n        let rand = math.randomRange(-200,200);//随机数\n        const newBrick=instantiate(this.pref_Brick);//实例化\n        this.nd_BrickPlace.addChild(newBrick);//添加子节点\n        newBrick.setPosition(v3(0,rand,0));//设置节点的相对位置\n        this.allBricks.push(newBrick)//入队尾\n        if(this.allBricks.length>8){//判断队列长度\n            this.allBricks.shift().destroy()//队首出队并销毁\n        }\n        tween(newBrick)//移动\n        .to(20,{position:v3(-2000,rand,0)})\n        .delay(500)\n        .start();\n    }\n\n    private checkTimer(){//每一定间隔生成砖块\n        if(this.Timer<300){\n            this.Timer++;\n        }\n        else{\n            this.Timer=0;\n            this.summonBricks();\n            console.log(\"Summon\")\n        }\n    }\n///////////////////////////////////////////////\n    onLoad(){\n        this.gameStatus=EnumGameStatus.init;//初始化游戏\n    }\n    update(deltaTime: number) {\n        this.checkTimer();\n    }\n}\n"]}